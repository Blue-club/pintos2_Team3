Kernel command line: -q -f put write-bad-ptr put sample.txt run write-bad-ptr
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 313 sector (156 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 105 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Executing 'write-bad-ptr':
(write-bad-ptr) begin
Kernel PANIC at ../../threads/synch.c:196 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0x8004217e12 0x800420a394 0x800421ce0c 0x800421cbe1 0x800421c9c9 0x400341 0x4003b5 0x40010b 0x4001d6 0x400c77.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 63 ticks
Thread: 30 idle ticks, 32 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 107 reads, 248 writes
hd1:0: 105 reads, 0 writes
Console: 1245 characters output
Key